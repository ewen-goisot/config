"vim plugins with vundle
"https://repo.zenk-security.com/
"^ source de savoir quasi infinie
"karabiner = tab :!= c-i (osx uniquement)
"loupe: meilleure coloration des recherches
"TODO https://vimawesome.com
"repeat.vim (compat repeter+plugin)
"cd ~/.vim/bundle
"git clone git://github.com/tpope/vim-abolish.git
"vim surround
"https://github.com/ervandew/supertab
"vim ctrlp
"TODO https://vim.fandom.com/wiki/View_text_file_in_two_columns
"(split screen)
" https://www.drchip.org/astronaut/vim/index.html
" foldcol: what I need for columns
set nocompatible " be iMproved, required
set ignorecase
set smartcase
set list
"set listchars=tab:>.,trail:-
set listchars=eol:$,tab:▸_,trail:~,extends:>,precedes:<
"set sidescroll=10
":hi SpecialKey ctermfg=grey guifg=grey70

"set iskeyword+=.,
set nrformats+=alpha

filetype off " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim' " let Vundle manage Vundle, required
Plugin 'scrooloose/nerdtree'  " search/open/… files
Plugin 'scrooloose/nerdcommenter'  " search/open/… files
Plugin 'vim-syntastic/syntastic' " check errors and warnings
Plugin 'vim-airline/vim-airline' " better bar (mode… with color)
Plugin 'mbbill/undotree' " historiqe sous forme d'arbre
"Plugin 'gko/vim-coloresque'      "prévisualiser les couleurs
"Plugin 'Valloric/YouCompleteMe'  " autocomplétion automatique
Plugin 'Shougo/deoplete.nvim'
Plugin 'easymotion/vim-easymotion'
"Plugin 'ntpeters/vim-better-whitespace'
"Plugin 'MarcWeber/vim-addon-mw-utils'
"Plugin 'tomtom/tlib_vim'
"Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'SirVer/ultisnips'
Plugin 'majutsushi/tagbar' " acces rapide aux fonctions en C
Plugin 'fidian/hexmode.git' " hexadecimal
Plugin 'the-lambda-church/coquille' " coq (ap pl tests comparatifs)
Plugin 'let-def/vimbufsync' " needed for coquille
Plugin 'HiPhish/info.vim' " info manual
" TODO rainbow fzf ack
"Plugin 'manu/coq-au-vim'
"Plugin 'octol/vim-cpp-enhanced-hi'
"Plugin 'ctrlpvim/ctrlp.vim'
"Plugin 'tounaishouta/coq.vim'
"Plugin 'christoomey/vim-tmux-navigator'
"Plugin 'kien/ctrlp.vim'
call vundle#end()            " required

filetype plugin indent on    " required
let g:EasyMotion_keys="tusic'mproghd,v.j-qkfèbylénae"
"let g:UltiSnipsSnippetDirectories=['~/.vim/bundle/ultisnips','UltiSnips']
"let g:UltiSnipsExpandTrigger='<tab>'
"let g:UltiSnipsJumpForwardTrigger="<c-b>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:deoplete#enable_at_startup = 1
call deoplete#custom#option('min_pattern_length',1)
"let g:deoplete-source-attribute-min_pattern_length =1
set completeopt+=noinsert
"let g:better_whitespace_enabled=1
"let g:strip_whitespace_on_save=1
":EnableWhitespace
"UpdateRemotePlugins [for nvim one time for deoplete]
"
let g:cpp_class_scope_hi = 1
let g:cpp_member_variable_hi = 1
let g:cpp_class_decl_hi = 1
"let g:cpp_experimental_simple_template_hi = 1
"let g:cpp_experimental_template_hi = 1
let c_no_curly_error=1

let g:cpp_concepts_hi = 1

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnipsJumpForwardTrigger="<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="tabdo"

let g:tagbar_ctags_bin="/usr/bin/ctags"
"set runtimepath^=~/.vim/bundle/ctrlp.vim
"helptags ~/.vim/bundle/ctrlp.vim/doc
"let g:ctrlp_map = '<c-p>'

"let g:tmux_navigator_no_mappings = 1


highlight Normal guifg=white guibg=black
hi ColorColumn ctermbg=234 guibg=#202020

set cursorline
set cursorcolumn
set number
set norelativenumber
set mouse=a
set hlsearch
set autoindent
set smartindent
"set cin
set backspace=indent,eol,start
set noerrorbells
set colorcolumn=8,16,24,32,40,48,56,64
set ruler
hi Search cterm=NONE ctermbg=169 ctermfg=black guibg=pink guifg=black
hi IncSearch cterm=NONE ctermbg=82 ctermfg=black guibg=green guifg=black
hi LineNr ctermfg=102 guifg=#808080
hi CursorLineNr ctermfg=yellow
hi CursorLine cterm=NONE ctermbg=234 ctermfg=NONE guibg=#202020 guifg=NONE
hi CursorColumn cterm=NONE ctermbg=black ctermfg=white guibg=black guifg=white
au InsertEnter * hi CursorColumn cterm=NONE ctermbg=18 ctermfg=white guibg=#000055 guifg=#ffffff
au InsertLeave * hi CursorColumn cterm=NONE ctermbg=black ctermfg=white guibg=#000000 guifg=#ffffff
hi EasyMotionTarget2First cterm=bold ctermbg=black ctermfg=208 guibg=black guifg=orange
hi EasyMotionTarget2Second cterm=bold ctermbg=black ctermfg=yellow guibg=black guifg=yellow
hi EasyMotionTarget cterm=bold ctermbg=black ctermfg=red guibg=black guifg=red

set tabstop=4
set shiftwidth=4
set clipboard=unnamed
set wildmenu
set showcmd
set showmode
set ru
set foldmethod=marker
set ttimeoutlen=0
"set wrapscan
"set nowrap

"tab all


au FileType cpp :source ~/.vim/.cpp.vimrc
au FileType hpp :source ~/.vim/.cpp.vimrc
au FileType c :source ~/.vim/.cpp.vimrc
au FileType h :source ~/.vim/.cpp.vimrc
autocmd FileType text setlocal textwidth=80


source ~/.vim.new
