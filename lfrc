set timefmt ' 2006-01-02 15:04:05'
set promptfmt "\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[1m%f\033[0m"
set color256 true
set drawbox true
set sortby name
set incsearch true
set ratios '1:2:3:6'
set scrolloff 3


cmd open

cmd software-open ${{
	case $(file --mime-type "$f" -b) in
		audio/*|application/octet-stream) tmux rename-window "ðŸ–¿ mpv  "; mpv $fx; tmux rename-window "ðŸ–¿      ";;
		#video/*) setsid mpv $fx > /dev/null 2>&1 & ;;
		video/*) var="/ram/mpv_lf.fifo"; ((pgrep -f "^mpv --input-file=$var" && echo "$f" | sed "s/^.*$/loadfile & append/" > $var) || (rm $var; mkfifo $var && setsid mpv --input-file=$var "$f" )) >/dev/null 2>&1 & echo "loading '$f'";;
		application/octet-stream) var="/ram/mpv_lf.fifo"; ((pgrep -f "^mpv --input-file=$var" && echo "$f" | sed "s/^.*$/loadfile & append/" > $var) || (rm $var; mkfifo $var && setsid mpv --input-file=$var "$f" )) >/dev/null 2>&1 & echo "loading '$f'";;
		application/pdf) (zathura $f 1>/dev/null 2>&1) &;;
		image/vnd.djvu) (zathura $f 1>/dev/null 2>&1) &;;
		image/*) (sxiv $fx >/dev/null 2>&1) & ;;
		text/html) (chromium-browser $f 1>/dev/null 2>&1) &;;
		text/*) tmux rename-window "ðŸ–¿ nvim "; nvim $fx; tmux rename-window "ðŸ–¿      ";;
		inode/*) echo bla;;
		*) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
	esac
	#*/
}}

cmd on-cd &{{
	( sleep .1; tmux rename-window "ðŸ–¿ $( pwd | sed "s/.*\/\([^/]\{5\}\)[^/]*$/\1/ ; s/^/     / ; s/^.*\(.....\)$/\1/" )" )&
}}

cmd recol %{{
	w=$(tput cols)
	if [ $w -le 60 ]; then
	lf -remote "send $id set ratios 1:2"
	elif [ $w -le 120 ]; then
	lf -remote "send $id set ratios 1:2:3"
	else
	lf -remote "send $id set ratios 1:2:3:6"
	fi
}}

map '!' shell-wait
map '?' shell
map ';' :source ~/.config/lf/lfrc
map '"' push :glob-select<space>*.
map 'Â§' push :glob-unselect<space>*.
map '&' shell-async
map '|' shell-pipe

map @ mark-save
map â‰  mark-remove
map p paste
map P $ rm $f
map "'" cut
map <delete> cut
map Â° :{{
	$mv $fx ~/.local/share/Trash/lf
	unselect
}}
map y copy
map Y clear

map _ mark-load

set previewer ~/.config/lf/pv.sh
map o $~/.config/lf/pv_less.sh $f | less
map O $$PAGER $fx
map a software-open
map i $tmux rename-window "$(echo $fx | sed "s# .*# â€¦#g;s#^.*/##;s#^#LV #")" && nvim $fx && tmux rename-window "ðŸ–¿      "
map <insert> $$EDITOR $fx
map u rename
map <c-u> rename
map h invert


map - push $chmod<space><space>$fx<left><left><left><left>
map â€¦ push $mkdir<space>
map . push $touch<space>
map , unselect
map k :toggle; down
map K :up; toggle
map <space> :toggle

map e set hidden!

map Ã©b set number!
map Ã©c :set sortby time
map Ã©m :set sortby size
map Ã©l :set sortby name
map Ã©f :set sortby natural
map Ã©z set ratios 1:1:1:1:1:1

map Ã©g set reverse!
map Ã©t set info time
map Ã©s set info size
map Ã©n set info
map Ã©r set info size:time
map Ã©x recol

map Ã©d set info ctime
map Ã©v set sortby ctime
map Ã©j set info atime
map Ã©w set sortby atime


map ( page-up
map ) page-down
map <lt> find-back
map <gt> find
map '#' $for i in *;do mv "$i" $(echo $i| sed "s/ /_/g");done

map c find-prev
map m up
map <c-p> up
map l find-next
map f half-up
map F page-up
map z push $<space><space>$fx<left><left><left><left>

map G bottom
map <c-e> bottom

map t :updir; on-cd
map <c-b> :updir; on-cd
map s down
map <c-n> down
map n :open; on-cd
map <c-f> :open; on-cd
map r half-down
map R page-down
map x ! $f

map <c-d> :{{
	$rm /ram/lfcd 2>/dev/null
	quit
}}
map q :{{
	$rm /ram/lfcd 2>/dev/null
	quit
}}
map d search
map v search-next
map j :updir; up; open; on-cd
map w :updir; down; open; on-cd


map Q :{{
	$pwd > /ram/lfcd
	quit
}}
map D search-back
map V search-prev


map <enter> half-down
map g top
map <c-a> top

map Ã¨b :cd /bin ; on-cd
map Ã¨c :cd ~/.config ; on-cd
map Ã¨d :cd ~/Desktop ; on-cd
map Ã¨e :cd /etc ; on-cd
map Ã¨h :cd ~ ; on-cd
map Ã¨k :cd /ram ; on-cd
map Ã¨l :cd ~/.local ; on-cd
map Ã¨m :cd /media ; on-cd
map Ã¨n :cd ~/note ; on-cd
map Ã¨o :cd ~/Downloads ; on-cd
map Ã¨p :cd ~/prog ; on-cd
map Ã¨q :cd ~/.local/share/Trash ; on-cd
map Ã¨r :cd / ; on-cd
map Ã¨s :cd ~/.script ; on-cd
map Ã¨t :cd /tmp ; on-cd
map Ã¨u :cd /usr ; on-cd
map Ã¨v :cd ~/.vim ; on-cd
map Ã¨y :cd ~/cloc ; on-cd
map Ã¨z :cd ~/.oh-my-zsh ; on-cd

map Ã¨ab :cd ~/Public ; on-cd
map Ã¨ad :cd ~/Documents ; on-cd
map Ã¨ag :cd ~/git ; on-cd
map Ã¨am :cd ~/Music ; on-cd
map Ã¨ap :cd ~/Pictures ; on-cd
map Ã¨at :cd ~/Templates ; on-cd
map Ã¨av :cd ~/Videos ; on-cd

map <c-l> redraw
map <c-r> reload
map <c-z> :{{
	$pwd > /ram/lfcd
	$kill -STOP $PPID
}}

cmap <up> cmd-history-prev
cmap <down> cmd-history-next
cmap <c-t> cmd-word-back
cmap <c-o> cmd-word






