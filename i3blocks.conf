
separator_block_width=7

# my screen is 1366x768, use different values for sizes if using too much different screen

[debit]
# internet speed (recieving, sending, 2→4nbs if wifi), in kbits/sec, need to INSTALL ifstat
markup=pango
command=echo "<b><span background='#ff00ff' color='#000000'>`ifstat 8 1 | tail -n 1 | sed "s/\...//g" | sed "s/ \+/ /g"` </span></b>"
interval=8
markup=pango
min_width=OOOOO

[internet_ping]
# in ms, retry every 10seconds if fail, no alarm
markup=pango
command=echo "<b><span background='#000088' color='white'> `ping -c 3 8.8.8.8 -q  | tail -n 1 | grep -oP ' [0-9]*.[0-9]'|| (echo fail && (sleep 10; i3-msg exec \"pkill -RTMIN+3 i3blocks\")&)` </span></b>"
interval=1024
min_width=OOOOOO
align=left
signal=3

[main]
# most CPU-consumming process, no alarm
markup=pango
command=echo "<b><span background='#5566ff' color='black'>`ps -eo "%cpu,args" | grep "[1-9]\.[0-9]" | sed "s/^ \([0-9]\.\)/0\1/" | sort | tail -n 1 | sed "s/\/usr\|\/lib\|\/bin\|\/sbin//g" | sed "s/^\(...........\).*/\1/"`</span></b>"
interval=32

[nvidia-usage]
# only works on Nvidia GPU, % and frequency (2 values), alarm if high frequency
markup=pango
command=var=$( nvidia-smi --format=nounits,csv,noheader --query-gpu=utilization.gpu,clocks.mem,clocks.gr | sed "s/,//g ; s/^.*[0-9]\{4\}/#000000'> :&/ ; s/^[^#]/#003039'>:&/ ; s/:\(.\) /: \1 /") && echo "<b><span color='white' background='$var </span></b>"
interval=8
min_width=OOOOOOOOOOOOOO
align=left

[cpu usage]
# % and frequency in 10MHz, alarm if more than 40%
markup=pango
command=var=$( mpstat 1 1 | tail -1 | sed "s/.* /100-/ ; s/.$// ; s/,/./" | bc | sed "s/^.\./ &/ ; s/^\./ 0&/ ; s/^[4-9][0-9]\.\|100\./ffffff'>:&/ ; s/^[^f]/00cc77'>:&/") && echo "<b><span color='black' background='#$var `cpufreq-info -f | sed 's/....$//'   ` </span></b>"
interval=4
min_width=OOOOOOOOOOO
align=left

[ram usage]
# free space in Go, alarm if less than 1Go
markup=pango
command=var=$( cat /proc/meminfo | grep "^MemA" | sed "s/.*: *//;s/\(...\)... kB/.\1/"  | sed "s/^[2-9]/004400'>:&/ ; s/^[^0].*$/000000'>:&/") && echo "<b><span color='white' background='#$var </span></b>"
interval=12
min_width=OOOOOO
align=left

[batterie]
# in %, alarm when discharging
markup=pango
command=var=$(acpi -b | sed "s/Battery 0: // ; s/.......... \(remaining\|until charged\)// ; s/Discharging, /ffffff'>:/ ; s/^.* /11ff00'>:/") && echo "<b><span color='black' background='#$var </span></b>"
interval=64
min_width=OOOOO
align=left

[disk]
# free space in Go, alarm if less than 100Go free space
markup=pango
command=var=$(df -h --output=avail / | tail -1 | sed "s/G$// ; s/^ // ; s/.../444400'> :&/ ; s/^..$/000000'> : &/") && echo "<b><span color='white' background='#$var </span></b>"
interval=64
min_width=OOOOOO
align=left

[volume sonore]
# in decibels. Alarm when change is more than 100dB (≈ mute)
markup=pango
command=var=$(pactl list sinks | grep "Volume: front-left" | head -n 1 | sed "s/. dB,.*$// ; s/^.*% \/ // ; s/,/./ ; s/^-\?.\./ &/ ; s/^\( \?[^- ]\)/ \1/ ; s/^...\../ffcc11'>:& / ; s/^[^f]/ffffff'>:&/") && echo "<b><span color='black' background='#$var</span></b>"
interval=64
signal=1
min_width=:-10.00
align=left

[GPU temp]
# alarm when greater than 50°C
markup=pango
command=var=$(nvidia-smi --format=nounits,csv,noheader --query-gpu=temperature.gpu| sed "s/[0-9]00$// ; s/^[0-4]./aa0000'> T &/ ; s/^[5-9]./000000'> T &/") && echo "<b><span color='white' background='#$var </span></b>"
interval=16
min_width=0T 00
align=left

[temp_cpu]
# alarm when greater than 50°C
# it's not exactly CPU (?)
markup=pango
command=var=$(cat /sys/class/thermal/thermal_zone0/temp | sed "s/[0-9]00$// ; s/^[0-4]./ff5555'> T &/ ; s/^[5-9]./ffffff'> T &/") && echo "<b><span color='black' background='#$var </span></b>"
interval=16
min_width=0T 00
align=left

[lock]
# indicators for capslock (left) and numlock (right) : white when on
markup=pango
command=xset -q | grep "Num" | sed "s/02.*// ; s/[A-Z][a-z]*:\?//g ; s/ *//g ; s/00:on/<b><span color='black' background='#ffffff'> Ca <\/span><\/b>/ ; s/01:on/<b><span color='black' background='#ffffff'> Nu <\/span><\/b>/ ; s/..:off/<b><span color='#ff00ff' background='#000000'> XX <\/span><\/b>/g"
interval=8
signal=2

[time]
command=date '+%a%y-%m-%d %H:%M:%S'
interval=1


